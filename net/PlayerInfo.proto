syntax = "proto3";

package Proto.Unity;

message PlayerInfo {
    
    uint32 id = 1;
    string name = 2;

    float posX = 3;
    float posZ = 4;
    float angle = 5;
    float speed = 6;
    uint32 state = 7;   // 0 IDEL 1 WALK

    int32 Hp = 8;
    int32 Mp = 9;
    int32 ATK = 10;
    int32 DEF = 11;

    Operation op = 12;
}

message Operation {
    float h = 1;
    float v = 2;
}

message Chat {
    uint32 ids = 1; // 发起源id
    uint32 idt = 2; // 目标源id // -1 表示广播
    string msg = 3;
}


message Authentication {
    string name = 1;
    string password = 2;
}



// message Items {
//     enum ITEMTYPE {
//         MONEY = 0;
//         CONSUME = 1;
//         EQUIP = 2;
//     }
//     uint32 m_mask=1;   // 或者 0不显示
//     uint32 m_uid =2;
//     uint32 m_type =3;
//     uint32 m_lv =4;
//     int32  m_price =8;
//     repeated ItemsAttribute m_attribute =9;
// }

// message ItemsAttribute {
//     enum ATTRIBUTETYPE {
//         HP = 0;
//         MP = 1;
//         ATK = 2;
//     }
//     ATTRIBUTETYPE m_type = 1;
//     float m_value = 2;
// }


message ItemInfo {
    uint32 m_uid = 1;
    uint32 m_type = 2;
    uint32 m_hp = 3;
    uint32 m_mp = 4;
    uint32 m_atk = 5;
    uint32 m_price = 6;
    uint32 m_count = 7;
}


/*
 * optype : value
 *  0       basebag 增加物品，add1 为数量
 *  1       basebag 减少物品，add1 为数量
 *  2       basebag 使用物品，add1 为数量
 *  3       equip   装备
 *  4       unequip  卸下装备
 *  5       trade   交易物品，add1 为数量， add2 为交易对象 id
 *  6       
 */
message ItemEvent {
    uint32 optype = 1;     // 
    uint32 uid =2;         // 物品id
    uint32 count =3;       // 数量
    string add1 =5;        // 增加
    uint32 tid =4;         // 交易对象id
}

message ItemAdd {
    uint32 optype = 1;
    uint32 uid = 2;
    uint32 count =3;
}

message ItemDel {
    uint32 optype =1;   // 0 代表摧毁， 1 代表使用
    uint32 uid =2;
    uint32 count =3;
}

message ItemTrade {
    uint32 optype =1;
    uint32 uid = 2;
    uint32 count =3;
    uint32 tid  = 4;
}

message ItemEquip {
    uint32 optype = 1;
    uint32 uid = 2;
}

message ItemUnEquip {
    uint32 optype = 1;
    uint32 uid = 2;
}

message ItemUpdate {
    uint32 m_optype = 1;
    ItemInfo  m_item = 2;  // 更新装备属性
}


message PlayerBag {
    repeated ItemInfo Items = 1;
    repeated uint32 equiped = 2;
}




message PlayerAllFuckInfo {
    PlayerInfo baseinfo = 1;
    PlayerBag baginfo = 2;
}


message ServerInfo {
    int32 m_type = 1; 
    string m_ip = 2;
    int32 m_port = 3;
}